@page "/produtos/adicionar"
@inject HttpClient Http

<PageTitle>Produtos</PageTitle>

<MudText Typo="Typo.h4">Adicionar Produtos</MudText>

<MudPaper Class="mt-4 pt-0 pb-4 px-8" Elevation="3">
    <MudForm>
@*        <MudTextField @bind-Value="idProduto" T="int" Label="Produto" Required="true"
                      RequiredError="Id do produto é obrigatório" />*@
        <MudTextField @bind-Value="nomeProduto" T="string" Label="Produto" Required="true"
                      RequiredError="Nome do produto é obrigatório"  />
        <MudNumericField @bind-Value="valorProduto" T="double" Label="Valor do Produto" Format="N2" T="double?"
                         HelperText="1.999,99" />
    </MudForm>
</MudPaper>

<div class="mt-4">
    <MudButton OnClick="AdicionarProduto" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true">
        Salvar
    </MudButton>
    <MudButton OnClick="NovoProduto" Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true">
        Novo
    </MudButton>
    <MudButton Variant="Variant.Filled" DisableElevation="true">
        Voltar
    </MudButton>
</div>

<p>@message</p>

@code {
    //int idProduto;
    string? nomeProduto;
    double valorProduto;
    string? message;

    protected async Task AdicionarProduto()
    {
        if (!string.IsNullOrEmpty(nomeProduto))
        {
            var produto = new Produto(nomeProduto, valorProduto);
            //produto.Id = idProduto;
            var result = await Http.PostAsJsonAsync("Produto", produto);
            if (result.IsSuccessStatusCode)
            {
                message = "adicionado com sucesso";
            }
        }
    }

    protected void NovoProduto()
    {
        nomeProduto = "";
        valorProduto = 0;
        message = "";
    }

}
