@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudToggleIconButton @bind-Toggled="@_isNavOpen" Edge="Edge.Start"
                             Icon="@Icons.Material.Filled.Menu" Title="Mostrar Menu" Color="Color.Surface"
                             ToggledIcon="@Icons.Material.Filled.MenuOpen" ToggledTitle="Esconder Menu" ToggledColor="Color.Surface" />
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                             Icon="@Icons.Material.Filled.DarkMode" Title="Modo Escuro" Color="Color.Surface"
                             ToggledIcon="@Icons.Material.Filled.LightMode" ToggledTitle="Modo Claro" ToggledColor="Color.Surface" />
    </MudAppBar>

    <MudDrawer @bind-Open="_isNavOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">LojaWeb</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="my-4 pt-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _isNavOpen = true;
    bool _isDarkMode = true;

    MudThemeProvider? _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isNavOpen = true;
            _isDarkMode = await _mudThemeProvider!.GetSystemPreference();
            StateHasChanged();
        }
    }
}